/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Oct 21 22:20:58 2019. */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SimpleMessage {
    pb_callback_t startChar;
    pb_callback_t data;
    pb_callback_t endChar;
/* @@protoc_insertion_point(struct:SimpleMessage) */
} SimpleMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SimpleMessage_init_default               {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define SimpleMessage_init_zero                  {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMessage_startChar_tag              1
#define SimpleMessage_data_tag                   2
#define SimpleMessage_endChar_tag                3

/* Struct field encoding specification for nanopb */
extern const pb_field_t SimpleMessage_fields[4];

/* Maximum encoded size of messages (where known) */
/* SimpleMessage_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SIMPLE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
