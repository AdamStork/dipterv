# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: functional_test.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='functional_test.proto',
  package='',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x15\x66unctional_test.proto\"\xc2\x01\n\ni2cMessage\x12\x14\n\x03\x62us\x18\x01 \x02(\x0e\x32\x07.i2cBus\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x02(\r\x12\x0b\n\x03reg\x18\x03 \x02(\r\x12 \n\tdirection\x18\x04 \x02(\x0e\x32\r.i2cDirection\x12 \n\tspeedMode\x18\x05 \x02(\x0e\x32\r.i2cSpeedMode\x12\x12\n\nclockSpeed\x18\x06 \x02(\r\x12(\n\tdutyCycle\x18\x07 \x01(\x0e\x32\x15.i2cFastModeDutyCycle\"\x9d\x02\n\nspiMessage\x12\x14\n\x03\x62us\x18\x01 \x02(\x0e\x32\x07.spiBus\x12\x0f\n\x07\x63ommand\x18\x02 \x02(\r\x12\x13\n\x0b\x64ummyclocks\x18\x03 \x02(\r\x12(\n\roperatingMode\x18\x04 \x02(\x0e\x32\x11.spiOperatingMode\x12$\n\x0bhardwareNSS\x18\x05 \x02(\x0e\x32\x0f.spiHardwareNSS\x12$\n\x0b\x66rameFormat\x18\x06 \x02(\x0e\x32\x0f.spiFrameFormat\x12\x1e\n\x08\x64\x61taSize\x18\x07 \x02(\x0e\x32\x0c.spiDataSize\x12\x1e\n\x08\x66irstBit\x18\x08 \x01(\x0e\x32\x0c.spiFirstBit\x12\x1d\n\tclockMode\x18\t \x01(\x0e\x32\n.clockMode\"\x7f\n\x0b\x64igitalGPIO\x12\x16\n\x03pin\x18\x01 \x02(\x0e\x32\t.gpioPins\x12!\n\tdirection\x18\x02 \x02(\x0e\x32\x0e.gpioDirection\x12\x1c\n\x05state\x18\x03 \x02(\x0e\x32\r.gpioPinState\x12\x17\n\x04pull\x18\x04 \x02(\x0e\x32\t.gpioPull\"\xb0\x01\n\x08\x61nalogIN\x12\x1e\n\x08instance\x18\x01 \x02(\x0e\x32\x0c.adcInstance\x12\x1c\n\x07\x63hannel\x18\x02 \x02(\x0e\x32\x0b.adcChannel\x12\x16\n\x03pin\x18\x03 \x02(\x0e\x32\t.gpioPins\x12\"\n\nresolution\x18\x04 \x02(\x0e\x32\x0e.adcResolution\x12*\n\x0e\x63lockPrescaler\x18\x05 \x02(\x0e\x32\x12.adcClockPrescaler\"\x7f\n\tanalogOUT\x12\x16\n\x03pin\x18\x01 \x02(\x0e\x32\t.gpioPins\x12\x11\n\tfrequency\x18\x02 \x02(\r\x12\x11\n\tdutyCycle\x18\x03 \x02(\r\x12&\n\ndependency\x18\x04 \x02(\x0e\x32\x12.pwmTimeDependency\x12\x0c\n\x04time\x18\x05 \x01(\r\"\x9b\x03\n\x0cusartMessage\x12\x16\n\x03\x62us\x18\x01 \x02(\x0e\x32\t.usartBus\x12\x18\n\x04mode\x18\x02 \x02(\x0e\x32\n.usartMode\x12\x10\n\x08\x62\x61udRate\x18\x03 \x02(\r\x12$\n\nwordLength\x18\x04 \x02(\x0e\x32\x10.usartWordLength\x12\x1c\n\x06parity\x18\x05 \x02(\x0e\x32\x0c.usartParity\x12 \n\x08stopBits\x18\x06 \x02(\x0e\x32\x0e.usartStopBits\x12\"\n\tdirection\x18\x07 \x02(\x0e\x32\x0f.usartDirection\x12\x0f\n\x07\x63ommand\x18\x08 \x02(\r\x12*\n\rclockPolarity\x18\t \x01(\x0e\x32\x13.usartClockPolarity\x12$\n\nclockPhase\x18\n \x01(\x0e\x32\x10.usartClockPhase\x12(\n\x0c\x63lockLastBit\x18\x0b \x01(\x0e\x32\x12.usartClockLastBit\x12\x30\n\rhwFlowControl\x18\x0c \x01(\x0e\x32\x19.usartHardwareFlowControl\"P\n\x0fresponseMessage\x12\x14\n\x0cresponseRead\x18\x01 \x01(\r\x12\'\n\rresponseWrite\x18\x02 \x01(\x0e\x32\x10.successfulWrite\"\x94\x02\n\x07\x43ommand\x12%\n\x0b\x63ommandType\x18\x01 \x02(\x0e\x32\x10.CommandTypeEnum\x12\x18\n\x03i2c\x18\x02 \x01(\x0b\x32\x0b.i2cMessage\x12\x18\n\x03spi\x18\x03 \x01(\x0b\x32\x0b.spiMessage\x12\x1c\n\x05usart\x18\x04 \x01(\x0b\x32\r.usartMessage\x12\x1a\n\x04gpio\x18\x05 \x01(\x0b\x32\x0c.digitalGPIO\x12\x1c\n\tanalog_in\x18\x06 \x01(\x0b\x32\t.analogIN\x12\x1e\n\nanalog_out\x18\x07 \x01(\x0b\x32\n.analogOUT\x12\"\n\x08response\x18\n \x01(\x0b\x32\x10.responseMessage\x12\x12\n\nautoConfig\x18\x0b \x01(\x08*\x80\x01\n\x0f\x43ommandTypeEnum\x12\x0c\n\x08LED_test\x10\x00\x12\x0c\n\x08I2C_test\x10\x01\x12\x0c\n\x08SPI_test\x10\x02\x12\x0e\n\nUSART_test\x10\x03\x12\x10\n\x0cGPIO_digital\x10\x04\x12\x0f\n\x0b\x41nalog_read\x10\x05\x12\x10\n\x0c\x41nalog_write\x10\x06*+\n\x0ci2cDirection\x12\r\n\tI2C_write\x10\x00\x12\x0c\n\x08I2C_read\x10\x01*&\n\x06i2cBus\x12\x08\n\x04I2C1\x10\x01\x12\x08\n\x04I2C2\x10\x02\x12\x08\n\x04I2C3\x10\x03*D\n\x0ci2cSpeedMode\x12\x1b\n\x17I2C_SPEED_MODE_STANDARD\x10\x00\x12\x17\n\x13I2C_SPEED_MODE_FAST\x10\x01*[\n\x14i2cFastModeDutyCycle\x12\x1f\n\x1bI2C_DUTY_CYCLE_TLOW_THIGH_2\x10\x00\x12\"\n\x1eI2C_DUTY_CYCLE_TLOW_THIGH_16_9\x10\x01*K\n\tclockMode\x12\x0e\n\nSPI_MODE_0\x10\x00\x12\x0e\n\nSPI_MODE_1\x10\x01\x12\x0e\n\nSPI_MODE_2\x10\x02\x12\x0e\n\nSPI_MODE_3\x10\x03*<\n\x0espiHardwareNSS\x12\x0b\n\x07\x44ISABLE\x10\x00\x12\r\n\tNSS_INPUT\x10\x01\x12\x0e\n\nNSS_OUTPUT\x10\x02*&\n\x06spiBus\x12\x08\n\x04SPI1\x10\x01\x12\x08\n\x04SPI2\x10\x02\x12\x08\n\x04SPI3\x10\x03*w\n\x10spiOperatingMode\x12\x1f\n\x1bSPI_MODE_FULL_DUPLEX_MASTER\x10\x00\x12\x1f\n\x1bSPI_MODE_HALF_DUPLEX_MASTER\x10\x01\x12!\n\x1dSPI_MODE_TRANSMIT_ONLY_MASTER\x10\x02*H\n\x0espiFrameFormat\x12\x1d\n\x19SPI_FRAME_FORMAT_MOTOROLA\x10\x00\x12\x17\n\x13SPI_FRAME_FORMAT_TI\x10\x01*B\n\x0bspiDataSize\x12\x18\n\x14SPI_DATA_SIZE_8_BITS\x10\x00\x12\x19\n\x15SPI_DATA_SIZE_16_BITS\x10\x01*;\n\x0bspiFirstBit\x12\x15\n\x11SPI_FIRST_BIT_MSB\x10\x00\x12\x15\n\x11SPI_FIRST_BIT_LSB\x10\x01*0\n\rgpioDirection\x12\x0f\n\x0bGPIO_OUTPUT\x10\x00\x12\x0e\n\nGPIO_INPUT\x10\x01*D\n\x0cgpioPinState\x12\x0c\n\x08GPIO_LOW\x10\x00\x12\r\n\tGPIO_HIGH\x10\x01\x12\x17\n\x13GPIO_NON_APPLICABLE\x10\x02*\xdb\x03\n\x08gpioPins\x12\x07\n\x03PA0\x10\x00\x12\x07\n\x03PA1\x10\x01\x12\x07\n\x03PA2\x10\x02\x12\x07\n\x03PA3\x10\x03\x12\x07\n\x03PA4\x10\x04\x12\x07\n\x03PA5\x10\x05\x12\x07\n\x03PA6\x10\x06\x12\x07\n\x03PA7\x10\x07\x12\x07\n\x03PA8\x10\x08\x12\x07\n\x03PA9\x10\t\x12\x08\n\x04PA10\x10\n\x12\x08\n\x04PA11\x10\x0b\x12\x08\n\x04PA12\x10\x0c\x12\x08\n\x04PA13\x10\r\x12\x08\n\x04PA14\x10\x0e\x12\x08\n\x04PA15\x10\x0f\x12\x07\n\x03PB0\x10\x14\x12\x07\n\x03PB1\x10\x15\x12\x07\n\x03PB2\x10\x16\x12\x07\n\x03PB3\x10\x17\x12\x07\n\x03PB4\x10\x18\x12\x07\n\x03PB5\x10\x19\x12\x07\n\x03PB6\x10\x1a\x12\x07\n\x03PB7\x10\x1b\x12\x07\n\x03PB8\x10\x1c\x12\x07\n\x03PB9\x10\x1d\x12\x08\n\x04PB10\x10\x1e\x12\x08\n\x04PB11\x10\x1f\x12\x08\n\x04PB12\x10 \x12\x08\n\x04PB13\x10!\x12\x08\n\x04PB14\x10\"\x12\x08\n\x04PB15\x10#\x12\x07\n\x03PC0\x10(\x12\x07\n\x03PC1\x10)\x12\x07\n\x03PC2\x10*\x12\x07\n\x03PC3\x10+\x12\x07\n\x03PC4\x10,\x12\x07\n\x03PC5\x10-\x12\x07\n\x03PC6\x10.\x12\x07\n\x03PC7\x10/\x12\x07\n\x03PC8\x10\x30\x12\x07\n\x03PC9\x10\x31\x12\x08\n\x04PC10\x10\x32\x12\x08\n\x04PC11\x10\x33\x12\x08\n\x04PC12\x10\x34\x12\x08\n\x04PC13\x10\x35\x12\x08\n\x04PC14\x10\x36\x12\x08\n\x04PC15\x10\x37\x12\r\n\tP_INVALID\x10<*B\n\x08gpioPull\x12\x10\n\x0cGPIO_NO_PULL\x10\x00\x12\x10\n\x0cGPIO_PULL_UP\x10\x01\x12\x12\n\x0eGPIO_PULL_DOWN\x10\x02*+\n\x0b\x61\x64\x63Instance\x12\x08\n\x04\x41\x44\x43\x31\x10\x01\x12\x08\n\x04\x41\x44\x43\x32\x10\x02\x12\x08\n\x04\x41\x44\x43\x33\x10\x03*Q\n\radcResolution\x12\x0f\n\x0b\x41\x44\x43_12_BITS\x10\x00\x12\x0f\n\x0b\x41\x44\x43_10_BITS\x10\x01\x12\x0e\n\nADC_8_BITS\x10\x02\x12\x0e\n\nADC_6_BITS\x10\x03*g\n\x11\x61\x64\x63\x43lockPrescaler\x12\x1a\n\x16\x41\x44\x43_PCLK2_DIVIDED_BY_4\x10\x00\x12\x1a\n\x16\x41\x44\x43_PCLK2_DIVIDED_BY_6\x10\x01\x12\x1a\n\x16\x41\x44\x43_PCLK2_DIVIDED_BY_8\x10\x02*\xa7\x03\n\nadcChannel\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN0\x10\x00\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN1\x10\x01\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN2\x10\x02\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN3\x10\x03\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN4\x10\x04\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN5\x10\x05\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN6\x10\x06\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN7\x10\x07\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN8\x10\x08\x12\x13\n\x0f\x41\x44\x43_CHANNEL_IN9\x10\t\x12\x14\n\x10\x41\x44\x43_CHANNEL_IN10\x10\n\x12\x14\n\x10\x41\x44\x43_CHANNEL_IN11\x10\x0b\x12\x14\n\x10\x41\x44\x43_CHANNEL_IN12\x10\x0c\x12\x14\n\x10\x41\x44\x43_CHANNEL_IN13\x10\r\x12\x14\n\x10\x41\x44\x43_CHANNEL_IN14\x10\x0e\x12\x14\n\x10\x41\x44\x43_CHANNEL_IN15\x10\x0f\x12\x14\n\x10\x41\x44\x43_CHANNEL_TEMP\x10\x14\x12\x17\n\x13\x41\x44\x43_CHANNEL_VREFINT\x10\x15\x12\x14\n\x10\x41\x44\x43_CHANNEL_VBAT\x10\x16*V\n\x11pwmTimeDependency\x12 \n\x1cPWM_TIME_DEPENDENCY_DISABLED\x10\x00\x12\x1f\n\x1bPWM_TIME_DEPENDENCY_ENABLED\x10\x01*R\n\x08usartBus\x12\n\n\x06USART1\x10\x01\x12\n\n\x06USART2\x10\x02\x12\n\n\x06USART3\x10\x03\x12\n\n\x06USART4\x10\x04\x12\n\n\x06USART5\x10\x05\x12\n\n\x06USART6\x10\x06*A\n\x0eusartDirection\x12\x13\n\x0fUSART_RX_AND_TX\x10\x00\x12\x0c\n\x08USART_RX\x10\x01\x12\x0c\n\x08USART_TX\x10\x02*5\n\x0fusartWordLength\x12\x10\n\x0cUSART_8_BITS\x10\x00\x12\x10\n\x0cUSART_9_BITS\x10\x01*Q\n\x0busartParity\x12\x15\n\x11USART_PARITY_NONE\x10\x00\x12\x15\n\x11USART_PARITY_EVEN\x10\x01\x12\x14\n\x10USART_PARITY_ODD\x10\x02*=\n\rusartStopBits\x12\x15\n\x11USART_STOP_BITS_1\x10\x01\x12\x15\n\x11USART_STOP_BITS_2\x10\x02*D\n\tusartMode\x12\x1b\n\x17USART_MODE_ASYNCHRONOUS\x10\x00\x12\x1a\n\x16USART_MODE_SYNCHRONOUS\x10\x01*\x8c\x01\n\x18usartHardwareFlowControl\x12\x19\n\x15USART_HW_FLOW_DISABLE\x10\x00\x12\x1a\n\x16USART_HW_FLOW_CTS_ONLY\x10\x01\x12\x1a\n\x16USART_HW_FLOW_RTS_ONLY\x10\x02\x12\x1d\n\x19USART_HW_FLOW_CTS_AND_RTS\x10\x03*Q\n\x12usartClockPolarity\x12\x1c\n\x18USART_CLOCK_POLARITY_LOW\x10\x00\x12\x1d\n\x19USART_CLOCK_POLARITY_HIGH\x10\x01*Q\n\x0fusartClockPhase\x12\x1e\n\x1aUSART_CLOCK_PHASE_ONE_EDGE\x10\x00\x12\x1e\n\x1aUSART_CLOCK_PHASE_TWO_EDGE\x10\x01*V\n\x11usartClockLastBit\x12 \n\x1cUSART_CLOCK_LAST_BIT_DISABLE\x10\x00\x12\x1f\n\x1bUSART_CLOCK_LAST_BIT_ENABLE\x10\x01*\xd4\x01\n\x0fsuccessfulWrite\x12\x0b\n\x07LED_SET\x10\x00\x12\x10\n\x0cI2C_WRITE_OK\x10\x01\x12\x12\n\x0eI2C_WRITE_FAIL\x10\x02\x12\x10\n\x0cSPI_WRITE_OK\x10\x03\x12\x12\n\x0eSPI_WRITE_FAIL\x10\x04\x12\x11\n\rGPIO_SET_HIGH\x10\x05\x12\x10\n\x0cGPIO_SET_LOW\x10\x06\x12\x13\n\x0fGPIO_WRITE_FAIL\x10\x07\x12\x0b\n\x07PWM_SET\x10\x08\x12\r\n\tPWM_RESET\x10\t\x12\x12\n\x0ePWM_WRITE_FAIL\x10\n')
)

_COMMANDTYPEENUM = _descriptor.EnumDescriptor(
  name='CommandTypeEnum',
  full_name='CommandTypeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LED_test', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C_test', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_test', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_test', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_digital', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Analog_read', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Analog_write', index=6, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1723,
  serialized_end=1851,
)
_sym_db.RegisterEnumDescriptor(_COMMANDTYPEENUM)

CommandTypeEnum = enum_type_wrapper.EnumTypeWrapper(_COMMANDTYPEENUM)
_I2CDIRECTION = _descriptor.EnumDescriptor(
  name='i2cDirection',
  full_name='i2cDirection',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='I2C_write', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C_read', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1853,
  serialized_end=1896,
)
_sym_db.RegisterEnumDescriptor(_I2CDIRECTION)

i2cDirection = enum_type_wrapper.EnumTypeWrapper(_I2CDIRECTION)
_I2CBUS = _descriptor.EnumDescriptor(
  name='i2cBus',
  full_name='i2cBus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='I2C1', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C2', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C3', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1898,
  serialized_end=1936,
)
_sym_db.RegisterEnumDescriptor(_I2CBUS)

i2cBus = enum_type_wrapper.EnumTypeWrapper(_I2CBUS)
_I2CSPEEDMODE = _descriptor.EnumDescriptor(
  name='i2cSpeedMode',
  full_name='i2cSpeedMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='I2C_SPEED_MODE_STANDARD', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C_SPEED_MODE_FAST', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1938,
  serialized_end=2006,
)
_sym_db.RegisterEnumDescriptor(_I2CSPEEDMODE)

i2cSpeedMode = enum_type_wrapper.EnumTypeWrapper(_I2CSPEEDMODE)
_I2CFASTMODEDUTYCYCLE = _descriptor.EnumDescriptor(
  name='i2cFastModeDutyCycle',
  full_name='i2cFastModeDutyCycle',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='I2C_DUTY_CYCLE_TLOW_THIGH_2', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C_DUTY_CYCLE_TLOW_THIGH_16_9', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2008,
  serialized_end=2099,
)
_sym_db.RegisterEnumDescriptor(_I2CFASTMODEDUTYCYCLE)

i2cFastModeDutyCycle = enum_type_wrapper.EnumTypeWrapper(_I2CFASTMODEDUTYCYCLE)
_CLOCKMODE = _descriptor.EnumDescriptor(
  name='clockMode',
  full_name='clockMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_0', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_3', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2101,
  serialized_end=2176,
)
_sym_db.RegisterEnumDescriptor(_CLOCKMODE)

clockMode = enum_type_wrapper.EnumTypeWrapper(_CLOCKMODE)
_SPIHARDWARENSS = _descriptor.EnumDescriptor(
  name='spiHardwareNSS',
  full_name='spiHardwareNSS',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DISABLE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NSS_INPUT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NSS_OUTPUT', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2178,
  serialized_end=2238,
)
_sym_db.RegisterEnumDescriptor(_SPIHARDWARENSS)

spiHardwareNSS = enum_type_wrapper.EnumTypeWrapper(_SPIHARDWARENSS)
_SPIBUS = _descriptor.EnumDescriptor(
  name='spiBus',
  full_name='spiBus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPI1', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI2', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI3', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2240,
  serialized_end=2278,
)
_sym_db.RegisterEnumDescriptor(_SPIBUS)

spiBus = enum_type_wrapper.EnumTypeWrapper(_SPIBUS)
_SPIOPERATINGMODE = _descriptor.EnumDescriptor(
  name='spiOperatingMode',
  full_name='spiOperatingMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_FULL_DUPLEX_MASTER', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_HALF_DUPLEX_MASTER', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_MODE_TRANSMIT_ONLY_MASTER', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2280,
  serialized_end=2399,
)
_sym_db.RegisterEnumDescriptor(_SPIOPERATINGMODE)

spiOperatingMode = enum_type_wrapper.EnumTypeWrapper(_SPIOPERATINGMODE)
_SPIFRAMEFORMAT = _descriptor.EnumDescriptor(
  name='spiFrameFormat',
  full_name='spiFrameFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPI_FRAME_FORMAT_MOTOROLA', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_FRAME_FORMAT_TI', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2401,
  serialized_end=2473,
)
_sym_db.RegisterEnumDescriptor(_SPIFRAMEFORMAT)

spiFrameFormat = enum_type_wrapper.EnumTypeWrapper(_SPIFRAMEFORMAT)
_SPIDATASIZE = _descriptor.EnumDescriptor(
  name='spiDataSize',
  full_name='spiDataSize',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPI_DATA_SIZE_8_BITS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_DATA_SIZE_16_BITS', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2475,
  serialized_end=2541,
)
_sym_db.RegisterEnumDescriptor(_SPIDATASIZE)

spiDataSize = enum_type_wrapper.EnumTypeWrapper(_SPIDATASIZE)
_SPIFIRSTBIT = _descriptor.EnumDescriptor(
  name='spiFirstBit',
  full_name='spiFirstBit',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SPI_FIRST_BIT_MSB', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_FIRST_BIT_LSB', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2543,
  serialized_end=2602,
)
_sym_db.RegisterEnumDescriptor(_SPIFIRSTBIT)

spiFirstBit = enum_type_wrapper.EnumTypeWrapper(_SPIFIRSTBIT)
_GPIODIRECTION = _descriptor.EnumDescriptor(
  name='gpioDirection',
  full_name='gpioDirection',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GPIO_OUTPUT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_INPUT', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2604,
  serialized_end=2652,
)
_sym_db.RegisterEnumDescriptor(_GPIODIRECTION)

gpioDirection = enum_type_wrapper.EnumTypeWrapper(_GPIODIRECTION)
_GPIOPINSTATE = _descriptor.EnumDescriptor(
  name='gpioPinState',
  full_name='gpioPinState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GPIO_LOW', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_HIGH', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_NON_APPLICABLE', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2654,
  serialized_end=2722,
)
_sym_db.RegisterEnumDescriptor(_GPIOPINSTATE)

gpioPinState = enum_type_wrapper.EnumTypeWrapper(_GPIOPINSTATE)
_GPIOPINS = _descriptor.EnumDescriptor(
  name='gpioPins',
  full_name='gpioPins',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PA0', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA3', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA4', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA5', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA6', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA7', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA8', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA9', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA10', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA11', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA12', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA13', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA14', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA15', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB0', index=16, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB1', index=17, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB2', index=18, number=22,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB3', index=19, number=23,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB4', index=20, number=24,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB5', index=21, number=25,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB6', index=22, number=26,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB7', index=23, number=27,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB8', index=24, number=28,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB9', index=25, number=29,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB10', index=26, number=30,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB11', index=27, number=31,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB12', index=28, number=32,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB13', index=29, number=33,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB14', index=30, number=34,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PB15', index=31, number=35,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC0', index=32, number=40,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC1', index=33, number=41,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC2', index=34, number=42,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC3', index=35, number=43,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC4', index=36, number=44,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC5', index=37, number=45,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC6', index=38, number=46,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC7', index=39, number=47,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC8', index=40, number=48,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC9', index=41, number=49,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC10', index=42, number=50,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC11', index=43, number=51,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC12', index=44, number=52,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC13', index=45, number=53,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC14', index=46, number=54,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PC15', index=47, number=55,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P_INVALID', index=48, number=60,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2725,
  serialized_end=3200,
)
_sym_db.RegisterEnumDescriptor(_GPIOPINS)

gpioPins = enum_type_wrapper.EnumTypeWrapper(_GPIOPINS)
_GPIOPULL = _descriptor.EnumDescriptor(
  name='gpioPull',
  full_name='gpioPull',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GPIO_NO_PULL', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_PULL_UP', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_PULL_DOWN', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3202,
  serialized_end=3268,
)
_sym_db.RegisterEnumDescriptor(_GPIOPULL)

gpioPull = enum_type_wrapper.EnumTypeWrapper(_GPIOPULL)
_ADCINSTANCE = _descriptor.EnumDescriptor(
  name='adcInstance',
  full_name='adcInstance',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADC1', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC2', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC3', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3270,
  serialized_end=3313,
)
_sym_db.RegisterEnumDescriptor(_ADCINSTANCE)

adcInstance = enum_type_wrapper.EnumTypeWrapper(_ADCINSTANCE)
_ADCRESOLUTION = _descriptor.EnumDescriptor(
  name='adcResolution',
  full_name='adcResolution',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADC_12_BITS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_10_BITS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_8_BITS', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_6_BITS', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3315,
  serialized_end=3396,
)
_sym_db.RegisterEnumDescriptor(_ADCRESOLUTION)

adcResolution = enum_type_wrapper.EnumTypeWrapper(_ADCRESOLUTION)
_ADCCLOCKPRESCALER = _descriptor.EnumDescriptor(
  name='adcClockPrescaler',
  full_name='adcClockPrescaler',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADC_PCLK2_DIVIDED_BY_4', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_PCLK2_DIVIDED_BY_6', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_PCLK2_DIVIDED_BY_8', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3398,
  serialized_end=3501,
)
_sym_db.RegisterEnumDescriptor(_ADCCLOCKPRESCALER)

adcClockPrescaler = enum_type_wrapper.EnumTypeWrapper(_ADCCLOCKPRESCALER)
_ADCCHANNEL = _descriptor.EnumDescriptor(
  name='adcChannel',
  full_name='adcChannel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN0', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN3', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN4', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN5', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN6', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN7', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN8', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN9', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN10', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN11', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN12', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN13', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN14', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_IN15', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_TEMP', index=16, number=20,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_VREFINT', index=17, number=21,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADC_CHANNEL_VBAT', index=18, number=22,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3504,
  serialized_end=3927,
)
_sym_db.RegisterEnumDescriptor(_ADCCHANNEL)

adcChannel = enum_type_wrapper.EnumTypeWrapper(_ADCCHANNEL)
_PWMTIMEDEPENDENCY = _descriptor.EnumDescriptor(
  name='pwmTimeDependency',
  full_name='pwmTimeDependency',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PWM_TIME_DEPENDENCY_DISABLED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PWM_TIME_DEPENDENCY_ENABLED', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3929,
  serialized_end=4015,
)
_sym_db.RegisterEnumDescriptor(_PWMTIMEDEPENDENCY)

pwmTimeDependency = enum_type_wrapper.EnumTypeWrapper(_PWMTIMEDEPENDENCY)
_USARTBUS = _descriptor.EnumDescriptor(
  name='usartBus',
  full_name='usartBus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART1', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART2', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART3', index=2, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART4', index=3, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART5', index=4, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART6', index=5, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4017,
  serialized_end=4099,
)
_sym_db.RegisterEnumDescriptor(_USARTBUS)

usartBus = enum_type_wrapper.EnumTypeWrapper(_USARTBUS)
_USARTDIRECTION = _descriptor.EnumDescriptor(
  name='usartDirection',
  full_name='usartDirection',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_RX_AND_TX', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_RX', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_TX', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4101,
  serialized_end=4166,
)
_sym_db.RegisterEnumDescriptor(_USARTDIRECTION)

usartDirection = enum_type_wrapper.EnumTypeWrapper(_USARTDIRECTION)
_USARTWORDLENGTH = _descriptor.EnumDescriptor(
  name='usartWordLength',
  full_name='usartWordLength',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_8_BITS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_9_BITS', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4168,
  serialized_end=4221,
)
_sym_db.RegisterEnumDescriptor(_USARTWORDLENGTH)

usartWordLength = enum_type_wrapper.EnumTypeWrapper(_USARTWORDLENGTH)
_USARTPARITY = _descriptor.EnumDescriptor(
  name='usartParity',
  full_name='usartParity',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_PARITY_NONE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_PARITY_EVEN', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_PARITY_ODD', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4223,
  serialized_end=4304,
)
_sym_db.RegisterEnumDescriptor(_USARTPARITY)

usartParity = enum_type_wrapper.EnumTypeWrapper(_USARTPARITY)
_USARTSTOPBITS = _descriptor.EnumDescriptor(
  name='usartStopBits',
  full_name='usartStopBits',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_STOP_BITS_1', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_STOP_BITS_2', index=1, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4306,
  serialized_end=4367,
)
_sym_db.RegisterEnumDescriptor(_USARTSTOPBITS)

usartStopBits = enum_type_wrapper.EnumTypeWrapper(_USARTSTOPBITS)
_USARTMODE = _descriptor.EnumDescriptor(
  name='usartMode',
  full_name='usartMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_MODE_ASYNCHRONOUS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_MODE_SYNCHRONOUS', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4369,
  serialized_end=4437,
)
_sym_db.RegisterEnumDescriptor(_USARTMODE)

usartMode = enum_type_wrapper.EnumTypeWrapper(_USARTMODE)
_USARTHARDWAREFLOWCONTROL = _descriptor.EnumDescriptor(
  name='usartHardwareFlowControl',
  full_name='usartHardwareFlowControl',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_HW_FLOW_DISABLE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_HW_FLOW_CTS_ONLY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_HW_FLOW_RTS_ONLY', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_HW_FLOW_CTS_AND_RTS', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4440,
  serialized_end=4580,
)
_sym_db.RegisterEnumDescriptor(_USARTHARDWAREFLOWCONTROL)

usartHardwareFlowControl = enum_type_wrapper.EnumTypeWrapper(_USARTHARDWAREFLOWCONTROL)
_USARTCLOCKPOLARITY = _descriptor.EnumDescriptor(
  name='usartClockPolarity',
  full_name='usartClockPolarity',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_CLOCK_POLARITY_LOW', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_CLOCK_POLARITY_HIGH', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4582,
  serialized_end=4663,
)
_sym_db.RegisterEnumDescriptor(_USARTCLOCKPOLARITY)

usartClockPolarity = enum_type_wrapper.EnumTypeWrapper(_USARTCLOCKPOLARITY)
_USARTCLOCKPHASE = _descriptor.EnumDescriptor(
  name='usartClockPhase',
  full_name='usartClockPhase',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_CLOCK_PHASE_ONE_EDGE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_CLOCK_PHASE_TWO_EDGE', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4665,
  serialized_end=4746,
)
_sym_db.RegisterEnumDescriptor(_USARTCLOCKPHASE)

usartClockPhase = enum_type_wrapper.EnumTypeWrapper(_USARTCLOCKPHASE)
_USARTCLOCKLASTBIT = _descriptor.EnumDescriptor(
  name='usartClockLastBit',
  full_name='usartClockLastBit',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USART_CLOCK_LAST_BIT_DISABLE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USART_CLOCK_LAST_BIT_ENABLE', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4748,
  serialized_end=4834,
)
_sym_db.RegisterEnumDescriptor(_USARTCLOCKLASTBIT)

usartClockLastBit = enum_type_wrapper.EnumTypeWrapper(_USARTCLOCKLASTBIT)
_SUCCESSFULWRITE = _descriptor.EnumDescriptor(
  name='successfulWrite',
  full_name='successfulWrite',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LED_SET', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C_WRITE_OK', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I2C_WRITE_FAIL', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_WRITE_OK', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPI_WRITE_FAIL', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_SET_HIGH', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_SET_LOW', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPIO_WRITE_FAIL', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PWM_SET', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PWM_RESET', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PWM_WRITE_FAIL', index=10, number=10,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4837,
  serialized_end=5049,
)
_sym_db.RegisterEnumDescriptor(_SUCCESSFULWRITE)

successfulWrite = enum_type_wrapper.EnumTypeWrapper(_SUCCESSFULWRITE)
LED_test = 0
I2C_test = 1
SPI_test = 2
USART_test = 3
GPIO_digital = 4
Analog_read = 5
Analog_write = 6
I2C_write = 0
I2C_read = 1
I2C1 = 1
I2C2 = 2
I2C3 = 3
I2C_SPEED_MODE_STANDARD = 0
I2C_SPEED_MODE_FAST = 1
I2C_DUTY_CYCLE_TLOW_THIGH_2 = 0
I2C_DUTY_CYCLE_TLOW_THIGH_16_9 = 1
SPI_MODE_0 = 0
SPI_MODE_1 = 1
SPI_MODE_2 = 2
SPI_MODE_3 = 3
DISABLE = 0
NSS_INPUT = 1
NSS_OUTPUT = 2
SPI1 = 1
SPI2 = 2
SPI3 = 3
SPI_MODE_FULL_DUPLEX_MASTER = 0
SPI_MODE_HALF_DUPLEX_MASTER = 1
SPI_MODE_TRANSMIT_ONLY_MASTER = 2
SPI_FRAME_FORMAT_MOTOROLA = 0
SPI_FRAME_FORMAT_TI = 1
SPI_DATA_SIZE_8_BITS = 0
SPI_DATA_SIZE_16_BITS = 1
SPI_FIRST_BIT_MSB = 0
SPI_FIRST_BIT_LSB = 1
GPIO_OUTPUT = 0
GPIO_INPUT = 1
GPIO_LOW = 0
GPIO_HIGH = 1
GPIO_NON_APPLICABLE = 2
PA0 = 0
PA1 = 1
PA2 = 2
PA3 = 3
PA4 = 4
PA5 = 5
PA6 = 6
PA7 = 7
PA8 = 8
PA9 = 9
PA10 = 10
PA11 = 11
PA12 = 12
PA13 = 13
PA14 = 14
PA15 = 15
PB0 = 20
PB1 = 21
PB2 = 22
PB3 = 23
PB4 = 24
PB5 = 25
PB6 = 26
PB7 = 27
PB8 = 28
PB9 = 29
PB10 = 30
PB11 = 31
PB12 = 32
PB13 = 33
PB14 = 34
PB15 = 35
PC0 = 40
PC1 = 41
PC2 = 42
PC3 = 43
PC4 = 44
PC5 = 45
PC6 = 46
PC7 = 47
PC8 = 48
PC9 = 49
PC10 = 50
PC11 = 51
PC12 = 52
PC13 = 53
PC14 = 54
PC15 = 55
P_INVALID = 60
GPIO_NO_PULL = 0
GPIO_PULL_UP = 1
GPIO_PULL_DOWN = 2
ADC1 = 1
ADC2 = 2
ADC3 = 3
ADC_12_BITS = 0
ADC_10_BITS = 1
ADC_8_BITS = 2
ADC_6_BITS = 3
ADC_PCLK2_DIVIDED_BY_4 = 0
ADC_PCLK2_DIVIDED_BY_6 = 1
ADC_PCLK2_DIVIDED_BY_8 = 2
ADC_CHANNEL_IN0 = 0
ADC_CHANNEL_IN1 = 1
ADC_CHANNEL_IN2 = 2
ADC_CHANNEL_IN3 = 3
ADC_CHANNEL_IN4 = 4
ADC_CHANNEL_IN5 = 5
ADC_CHANNEL_IN6 = 6
ADC_CHANNEL_IN7 = 7
ADC_CHANNEL_IN8 = 8
ADC_CHANNEL_IN9 = 9
ADC_CHANNEL_IN10 = 10
ADC_CHANNEL_IN11 = 11
ADC_CHANNEL_IN12 = 12
ADC_CHANNEL_IN13 = 13
ADC_CHANNEL_IN14 = 14
ADC_CHANNEL_IN15 = 15
ADC_CHANNEL_TEMP = 20
ADC_CHANNEL_VREFINT = 21
ADC_CHANNEL_VBAT = 22
PWM_TIME_DEPENDENCY_DISABLED = 0
PWM_TIME_DEPENDENCY_ENABLED = 1
USART1 = 1
USART2 = 2
USART3 = 3
USART4 = 4
USART5 = 5
USART6 = 6
USART_RX_AND_TX = 0
USART_RX = 1
USART_TX = 2
USART_8_BITS = 0
USART_9_BITS = 1
USART_PARITY_NONE = 0
USART_PARITY_EVEN = 1
USART_PARITY_ODD = 2
USART_STOP_BITS_1 = 1
USART_STOP_BITS_2 = 2
USART_MODE_ASYNCHRONOUS = 0
USART_MODE_SYNCHRONOUS = 1
USART_HW_FLOW_DISABLE = 0
USART_HW_FLOW_CTS_ONLY = 1
USART_HW_FLOW_RTS_ONLY = 2
USART_HW_FLOW_CTS_AND_RTS = 3
USART_CLOCK_POLARITY_LOW = 0
USART_CLOCK_POLARITY_HIGH = 1
USART_CLOCK_PHASE_ONE_EDGE = 0
USART_CLOCK_PHASE_TWO_EDGE = 1
USART_CLOCK_LAST_BIT_DISABLE = 0
USART_CLOCK_LAST_BIT_ENABLE = 1
LED_SET = 0
I2C_WRITE_OK = 1
I2C_WRITE_FAIL = 2
SPI_WRITE_OK = 3
SPI_WRITE_FAIL = 4
GPIO_SET_HIGH = 5
GPIO_SET_LOW = 6
GPIO_WRITE_FAIL = 7
PWM_SET = 8
PWM_RESET = 9
PWM_WRITE_FAIL = 10



_I2CMESSAGE = _descriptor.Descriptor(
  name='i2cMessage',
  full_name='i2cMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bus', full_name='i2cMessage.bus', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='i2cMessage.address', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reg', full_name='i2cMessage.reg', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='direction', full_name='i2cMessage.direction', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='speedMode', full_name='i2cMessage.speedMode', index=4,
      number=5, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clockSpeed', full_name='i2cMessage.clockSpeed', index=5,
      number=6, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dutyCycle', full_name='i2cMessage.dutyCycle', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=220,
)


_SPIMESSAGE = _descriptor.Descriptor(
  name='spiMessage',
  full_name='spiMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bus', full_name='spiMessage.bus', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='command', full_name='spiMessage.command', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dummyclocks', full_name='spiMessage.dummyclocks', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='operatingMode', full_name='spiMessage.operatingMode', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hardwareNSS', full_name='spiMessage.hardwareNSS', index=4,
      number=5, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frameFormat', full_name='spiMessage.frameFormat', index=5,
      number=6, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataSize', full_name='spiMessage.dataSize', index=6,
      number=7, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firstBit', full_name='spiMessage.firstBit', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clockMode', full_name='spiMessage.clockMode', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=223,
  serialized_end=508,
)


_DIGITALGPIO = _descriptor.Descriptor(
  name='digitalGPIO',
  full_name='digitalGPIO',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='digitalGPIO.pin', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='direction', full_name='digitalGPIO.direction', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='digitalGPIO.state', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pull', full_name='digitalGPIO.pull', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=510,
  serialized_end=637,
)


_ANALOGIN = _descriptor.Descriptor(
  name='analogIN',
  full_name='analogIN',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance', full_name='analogIN.instance', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='analogIN.channel', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pin', full_name='analogIN.pin', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resolution', full_name='analogIN.resolution', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clockPrescaler', full_name='analogIN.clockPrescaler', index=4,
      number=5, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=640,
  serialized_end=816,
)


_ANALOGOUT = _descriptor.Descriptor(
  name='analogOUT',
  full_name='analogOUT',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='analogOUT.pin', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='analogOUT.frequency', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dutyCycle', full_name='analogOUT.dutyCycle', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dependency', full_name='analogOUT.dependency', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='analogOUT.time', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=818,
  serialized_end=945,
)


_USARTMESSAGE = _descriptor.Descriptor(
  name='usartMessage',
  full_name='usartMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bus', full_name='usartMessage.bus', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mode', full_name='usartMessage.mode', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='baudRate', full_name='usartMessage.baudRate', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wordLength', full_name='usartMessage.wordLength', index=3,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parity', full_name='usartMessage.parity', index=4,
      number=5, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stopBits', full_name='usartMessage.stopBits', index=5,
      number=6, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='direction', full_name='usartMessage.direction', index=6,
      number=7, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='command', full_name='usartMessage.command', index=7,
      number=8, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clockPolarity', full_name='usartMessage.clockPolarity', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clockPhase', full_name='usartMessage.clockPhase', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clockLastBit', full_name='usartMessage.clockLastBit', index=10,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hwFlowControl', full_name='usartMessage.hwFlowControl', index=11,
      number=12, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=948,
  serialized_end=1359,
)


_RESPONSEMESSAGE = _descriptor.Descriptor(
  name='responseMessage',
  full_name='responseMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='responseRead', full_name='responseMessage.responseRead', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='responseWrite', full_name='responseMessage.responseWrite', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1361,
  serialized_end=1441,
)


_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commandType', full_name='Command.commandType', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='i2c', full_name='Command.i2c', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='spi', full_name='Command.spi', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='usart', full_name='Command.usart', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gpio', full_name='Command.gpio', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analog_in', full_name='Command.analog_in', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analog_out', full_name='Command.analog_out', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='response', full_name='Command.response', index=7,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='autoConfig', full_name='Command.autoConfig', index=8,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1444,
  serialized_end=1720,
)

_I2CMESSAGE.fields_by_name['bus'].enum_type = _I2CBUS
_I2CMESSAGE.fields_by_name['direction'].enum_type = _I2CDIRECTION
_I2CMESSAGE.fields_by_name['speedMode'].enum_type = _I2CSPEEDMODE
_I2CMESSAGE.fields_by_name['dutyCycle'].enum_type = _I2CFASTMODEDUTYCYCLE
_SPIMESSAGE.fields_by_name['bus'].enum_type = _SPIBUS
_SPIMESSAGE.fields_by_name['operatingMode'].enum_type = _SPIOPERATINGMODE
_SPIMESSAGE.fields_by_name['hardwareNSS'].enum_type = _SPIHARDWARENSS
_SPIMESSAGE.fields_by_name['frameFormat'].enum_type = _SPIFRAMEFORMAT
_SPIMESSAGE.fields_by_name['dataSize'].enum_type = _SPIDATASIZE
_SPIMESSAGE.fields_by_name['firstBit'].enum_type = _SPIFIRSTBIT
_SPIMESSAGE.fields_by_name['clockMode'].enum_type = _CLOCKMODE
_DIGITALGPIO.fields_by_name['pin'].enum_type = _GPIOPINS
_DIGITALGPIO.fields_by_name['direction'].enum_type = _GPIODIRECTION
_DIGITALGPIO.fields_by_name['state'].enum_type = _GPIOPINSTATE
_DIGITALGPIO.fields_by_name['pull'].enum_type = _GPIOPULL
_ANALOGIN.fields_by_name['instance'].enum_type = _ADCINSTANCE
_ANALOGIN.fields_by_name['channel'].enum_type = _ADCCHANNEL
_ANALOGIN.fields_by_name['pin'].enum_type = _GPIOPINS
_ANALOGIN.fields_by_name['resolution'].enum_type = _ADCRESOLUTION
_ANALOGIN.fields_by_name['clockPrescaler'].enum_type = _ADCCLOCKPRESCALER
_ANALOGOUT.fields_by_name['pin'].enum_type = _GPIOPINS
_ANALOGOUT.fields_by_name['dependency'].enum_type = _PWMTIMEDEPENDENCY
_USARTMESSAGE.fields_by_name['bus'].enum_type = _USARTBUS
_USARTMESSAGE.fields_by_name['mode'].enum_type = _USARTMODE
_USARTMESSAGE.fields_by_name['wordLength'].enum_type = _USARTWORDLENGTH
_USARTMESSAGE.fields_by_name['parity'].enum_type = _USARTPARITY
_USARTMESSAGE.fields_by_name['stopBits'].enum_type = _USARTSTOPBITS
_USARTMESSAGE.fields_by_name['direction'].enum_type = _USARTDIRECTION
_USARTMESSAGE.fields_by_name['clockPolarity'].enum_type = _USARTCLOCKPOLARITY
_USARTMESSAGE.fields_by_name['clockPhase'].enum_type = _USARTCLOCKPHASE
_USARTMESSAGE.fields_by_name['clockLastBit'].enum_type = _USARTCLOCKLASTBIT
_USARTMESSAGE.fields_by_name['hwFlowControl'].enum_type = _USARTHARDWAREFLOWCONTROL
_RESPONSEMESSAGE.fields_by_name['responseWrite'].enum_type = _SUCCESSFULWRITE
_COMMAND.fields_by_name['commandType'].enum_type = _COMMANDTYPEENUM
_COMMAND.fields_by_name['i2c'].message_type = _I2CMESSAGE
_COMMAND.fields_by_name['spi'].message_type = _SPIMESSAGE
_COMMAND.fields_by_name['usart'].message_type = _USARTMESSAGE
_COMMAND.fields_by_name['gpio'].message_type = _DIGITALGPIO
_COMMAND.fields_by_name['analog_in'].message_type = _ANALOGIN
_COMMAND.fields_by_name['analog_out'].message_type = _ANALOGOUT
_COMMAND.fields_by_name['response'].message_type = _RESPONSEMESSAGE
DESCRIPTOR.message_types_by_name['i2cMessage'] = _I2CMESSAGE
DESCRIPTOR.message_types_by_name['spiMessage'] = _SPIMESSAGE
DESCRIPTOR.message_types_by_name['digitalGPIO'] = _DIGITALGPIO
DESCRIPTOR.message_types_by_name['analogIN'] = _ANALOGIN
DESCRIPTOR.message_types_by_name['analogOUT'] = _ANALOGOUT
DESCRIPTOR.message_types_by_name['usartMessage'] = _USARTMESSAGE
DESCRIPTOR.message_types_by_name['responseMessage'] = _RESPONSEMESSAGE
DESCRIPTOR.message_types_by_name['Command'] = _COMMAND
DESCRIPTOR.enum_types_by_name['CommandTypeEnum'] = _COMMANDTYPEENUM
DESCRIPTOR.enum_types_by_name['i2cDirection'] = _I2CDIRECTION
DESCRIPTOR.enum_types_by_name['i2cBus'] = _I2CBUS
DESCRIPTOR.enum_types_by_name['i2cSpeedMode'] = _I2CSPEEDMODE
DESCRIPTOR.enum_types_by_name['i2cFastModeDutyCycle'] = _I2CFASTMODEDUTYCYCLE
DESCRIPTOR.enum_types_by_name['clockMode'] = _CLOCKMODE
DESCRIPTOR.enum_types_by_name['spiHardwareNSS'] = _SPIHARDWARENSS
DESCRIPTOR.enum_types_by_name['spiBus'] = _SPIBUS
DESCRIPTOR.enum_types_by_name['spiOperatingMode'] = _SPIOPERATINGMODE
DESCRIPTOR.enum_types_by_name['spiFrameFormat'] = _SPIFRAMEFORMAT
DESCRIPTOR.enum_types_by_name['spiDataSize'] = _SPIDATASIZE
DESCRIPTOR.enum_types_by_name['spiFirstBit'] = _SPIFIRSTBIT
DESCRIPTOR.enum_types_by_name['gpioDirection'] = _GPIODIRECTION
DESCRIPTOR.enum_types_by_name['gpioPinState'] = _GPIOPINSTATE
DESCRIPTOR.enum_types_by_name['gpioPins'] = _GPIOPINS
DESCRIPTOR.enum_types_by_name['gpioPull'] = _GPIOPULL
DESCRIPTOR.enum_types_by_name['adcInstance'] = _ADCINSTANCE
DESCRIPTOR.enum_types_by_name['adcResolution'] = _ADCRESOLUTION
DESCRIPTOR.enum_types_by_name['adcClockPrescaler'] = _ADCCLOCKPRESCALER
DESCRIPTOR.enum_types_by_name['adcChannel'] = _ADCCHANNEL
DESCRIPTOR.enum_types_by_name['pwmTimeDependency'] = _PWMTIMEDEPENDENCY
DESCRIPTOR.enum_types_by_name['usartBus'] = _USARTBUS
DESCRIPTOR.enum_types_by_name['usartDirection'] = _USARTDIRECTION
DESCRIPTOR.enum_types_by_name['usartWordLength'] = _USARTWORDLENGTH
DESCRIPTOR.enum_types_by_name['usartParity'] = _USARTPARITY
DESCRIPTOR.enum_types_by_name['usartStopBits'] = _USARTSTOPBITS
DESCRIPTOR.enum_types_by_name['usartMode'] = _USARTMODE
DESCRIPTOR.enum_types_by_name['usartHardwareFlowControl'] = _USARTHARDWAREFLOWCONTROL
DESCRIPTOR.enum_types_by_name['usartClockPolarity'] = _USARTCLOCKPOLARITY
DESCRIPTOR.enum_types_by_name['usartClockPhase'] = _USARTCLOCKPHASE
DESCRIPTOR.enum_types_by_name['usartClockLastBit'] = _USARTCLOCKLASTBIT
DESCRIPTOR.enum_types_by_name['successfulWrite'] = _SUCCESSFULWRITE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

i2cMessage = _reflection.GeneratedProtocolMessageType('i2cMessage', (_message.Message,), dict(
  DESCRIPTOR = _I2CMESSAGE,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:i2cMessage)
  ))
_sym_db.RegisterMessage(i2cMessage)

spiMessage = _reflection.GeneratedProtocolMessageType('spiMessage', (_message.Message,), dict(
  DESCRIPTOR = _SPIMESSAGE,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:spiMessage)
  ))
_sym_db.RegisterMessage(spiMessage)

digitalGPIO = _reflection.GeneratedProtocolMessageType('digitalGPIO', (_message.Message,), dict(
  DESCRIPTOR = _DIGITALGPIO,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:digitalGPIO)
  ))
_sym_db.RegisterMessage(digitalGPIO)

analogIN = _reflection.GeneratedProtocolMessageType('analogIN', (_message.Message,), dict(
  DESCRIPTOR = _ANALOGIN,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:analogIN)
  ))
_sym_db.RegisterMessage(analogIN)

analogOUT = _reflection.GeneratedProtocolMessageType('analogOUT', (_message.Message,), dict(
  DESCRIPTOR = _ANALOGOUT,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:analogOUT)
  ))
_sym_db.RegisterMessage(analogOUT)

usartMessage = _reflection.GeneratedProtocolMessageType('usartMessage', (_message.Message,), dict(
  DESCRIPTOR = _USARTMESSAGE,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:usartMessage)
  ))
_sym_db.RegisterMessage(usartMessage)

responseMessage = _reflection.GeneratedProtocolMessageType('responseMessage', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSEMESSAGE,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:responseMessage)
  ))
_sym_db.RegisterMessage(responseMessage)

Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), dict(
  DESCRIPTOR = _COMMAND,
  __module__ = 'functional_test_pb2'
  # @@protoc_insertion_point(class_scope:Command)
  ))
_sym_db.RegisterMessage(Command)


# @@protoc_insertion_point(module_scope)
